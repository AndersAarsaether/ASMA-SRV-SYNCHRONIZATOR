{
    "openapi": "3.0.1",
    "info": {
        "title": "Swagger documentation for Carasent Open API",
        "version": "1.0.0"
    },
    "schemes": ["http"],
    "servers": [{ "url": "http://localhost:9100/" }],
    "paths": {
        "/activities/ratings": {
            "post": {
                "tags": ["Storing feedback in Ad Voca"],
                "summary": "Store patient-provided ratings on various activities",
                "description": "Send ratings in FHIR format to this endpoint to add it to EHR of the correspoding patient in Ad Voca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ratings"
                            },
                            "example": {
                                "resourceType": "Observation",
                                "status": "before",
                                "code": { "text": "activity-ratings" },
                                "subject": { "identifier": { "value": "T1000" } },
                                "performer": [
                                    {
                                        "identifier": { "value": "adfectus" }
                                    }
                                ],
                                "effectiveDateTime": "2023-12-12T06:49:58.000Z",
                                "referenceRange": [
                                    {
                                        "low": { "value": 1 },
                                        "high": { "value": 5 }
                                    }
                                ],
                                "component": [
                                    {
                                        "code": { "text": "horse" },
                                        "valueInteger": 2
                                    },
                                    {
                                        "code": { "text": "gaming" },
                                        "valueInteger": 5
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/success" }
                            }
                        }
                    },
                    "400": {
                        "description": "The request body does not conform to the schema",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "401": {
                        "description": "Could not validate the API key",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "403": {
                        "description": "Incorrect API key",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    }
                }
            }
        },
        "/activities/comments": {
            "post": {
                "tags": ["Storing feedback in Ad Voca"],
                "summary": "Store patient-provided comments on various activities",
                "description": "Send comments in FHIR format to this endpoint to add it to EHR of the correspoding patient in Ad Voca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/comments"
                            },
                            "example": {
                                "resourceType": "Observation",
                                "status": "final",
                                "code": { "text": "activity-comments" },
                                "subject": { "identifier": { "value": "T1000" } },
                                "performer": [
                                    {
                                        "identifier": { "value": "adfectus" }
                                    }
                                ],
                                "effectiveDateTime": "2023-12-12T06:49:58.000Z",
                                "component": [
                                    {
                                        "code": { "text": "horse" },
                                        "valueString": "Jeg likte å ri på hest"
                                    },
                                    {
                                        "code": { "text": "gaming" },
                                        "valueString": "Jeg liker å game"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/success" }
                            }
                        }
                    },
                    "400": {
                        "description": "The request body does not conform to the schema",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "401": {
                        "description": "Could not validate the API key",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "403": {
                        "description": "Incorrect API key",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/error" }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ratings": {
                "type": "object",
                "description": "Information about ratings in FHIR format",
                "required": [
                    "resourceType",
                    "subject",
                    "performer",
                    "effectiveDateTime",
                    "referenceRange",
                    "component"
                ],
                "properties": {
                    "resourceType": {
                        "$ref": "#/components/schemas/type"
                    },
                    "status": {
                        "$ref": "#/components/schemas/status"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ratingsCode"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/patient"
                    },
                    "performer": {
                        "$ref": "#/components/schemas/sender"
                    },
                    "effectiveDateTime": {
                        "$ref": "#/components/schemas/timestamp"
                    },
                    "referenceRange": {
                        "$ref": "#/components/schemas/range"
                    },
                    "component": {
                        "$ref": "#/components/schemas/scores"
                    }
                }
            },
            "comments": {
                "type": "object",
                "description": "Information about comments in FHIR format",
                "required": [
                    "resourceType",
                    "subject",
                    "performer",
                    "effectiveDateTime",
                    "referenceRange",
                    "component"
                ],
                "properties": {
                    "resourceType": {
                        "$ref": "#/components/schemas/type"
                    },
                    "status": {
                        "$ref": "#/components/schemas/status"
                    },
                    "code": {
                        "$ref": "#/components/schemas/commentsCode"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/patient"
                    },
                    "performer": {
                        "$ref": "#/components/schemas/sender"
                    },
                    "effectiveDateTime": {
                        "$ref": "#/components/schemas/timestamp"
                    },
                    "referenceRange": {
                        "$ref": "#/components/schemas/range"
                    },
                    "component": {
                        "$ref": "#/components/schemas/answers"
                    }
                }
            },
            "type": {
                "type": "string",
                "description": "The FHIR resource type",
                "enum": ["Observation"]
            },
            "status": {
                "type": "string",
                "description": "When the feedback was given relative to the treatment (default is \"during\")",
                "enum": ["before", "mid", "during", "final"]
            },
            "ratingsCode": {
                "type": "object",
                "description": "The type of feedback",
                "required": ["text"],
                "properties": {
                    "text": {
                        "type": "string",
                        "enum": ["activity-ratings"]
                    }
                }
            },
            "commentsCode": {
                "type": "object",
                "description": "The type of feedback",
                "required": ["text"],
                "properties": {
                    "text": {
                        "type": "string",
                        "enum": ["activity-comments"]
                    }
                }
            },
            "patient": {
                "type": "object",
                "description": "The ID of the patient that gave the feedback",
                "required": ["identifier"],
                "properties": {
                    "identifier": {
                        "type": "object",
                        "required": ["value"],
                        "properties": {
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "sender": {
                "type": "array",
                "description": "The partner organization that sent the feedback",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                    "type": "object",
                    "required": ["identifier"],
                    "properties": {
                        "identifier": {
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "enum": ["adfectus"]
                                }
                            }
                        }
                    }
                }
            },
            "timestamp": {
                "type": "string",
                "description": "When the feedback was given",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?$"
            },
            "range": {
                "type": "array",
                "description": "Range of possible scores",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                    "type": "object",
                    "required": ["low", "high"],
                    "properties": {
                        "low": {
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {
                                    "type": "number"
                                }
                            }
                        },
                        "high": {
                            "type": "object",
                            "required": ["value"],
                            "properties": {
                                "value": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "scores": {
                "type": "array",
                "description": "The scores given by the patient for an activity",
                "minItems": 1,
                "items": {
                    "type": "object",
                    "required": ["code", "valueInteger"],
                    "properties": {
                        "code": {
                            "type": "object",
                            "required": ["text"],
                            "properties": {
                                "text": {
                                    "type": "string"
                                }
                            }
                        },
                        "valueInteger": {
                            "type": "number"
                        }
                    }
                }
            },
            "answers": {
                "type": "array",
                "description": "The comments given by the patient for an activity",
                "minItems": 1,
                "items": {
                    "type": "object",
                    "required": ["code", "valueString"],
                    "properties": {
                        "code": {
                            "type": "object",
                            "required": ["text"],
                            "properties": {
                                "text": {
                                    "type": "string"
                                }
                            }
                        },
                        "valueString": {
                            "type": "string"
                        }
                    }
                }
            },
            "success": {
                "type": "object",
                "description": "The response for successfull requests",
                "required": ["message"],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Success response from the server"
                    }
                }
            },
            "error": {
                "type": "object",
                "description": "The response for failed requests",
                "required": ["message", "errors"],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The action that failed"
                    },
                    "errors": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "description": "Relevant error messages"
                        }
                    }
                }
            }
        }
    }
}
